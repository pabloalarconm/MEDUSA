#!/bin/bash

declare -a Models=(
"unifiedCDE"
# "personal_information" "patient_status" "care_pathway" "diagnosis" "disease_history" "genetic_diagnosis" "phenotyping" "undiagnosed" "patient_consent" "disability"
)
for val in ${Models[@]}; 
do
    # cd ../../CDE-semantic-model-implementations/YARRRML_Transform_Templates/Builders_scripts_python/ # Fetch builders
    # # YARRRML:
    # python3 emb.py builder_${val} yarrrml > ../../../MEDUSA/trialCDE/config/${val}_yarrrml_template.yaml # Regenerate YARRRML using Python-based builder
    # # ShEx:
    # python3 emb.py builder_${val} shex > ../../../MEDUSA/trialCDE/shex/${val}.shex # Regenerate YARRRML using Python-based builder
    # # OBDA: 
    # python3 emb.py builder_${val} obda > ../../../MEDUSA/trialCDE/obda/${val}.obda # Regenerate YARRRML using Python-based builder

    # cd ../../../MEDUSA/trialCDE
    # sudo python3 uniq.py ${PWD}/data # Create/Regenerate new uniqids
    irb run_me_to_test.rb $val # Run Ruby-based RDF transformation

    # sudo rm data/${val}_rml.ttl 
    # sudo rm data/${val}_yarrrml.yaml
    # sudo rm data/${val}.ini
    # sudo rm data/triples/datasets_stats.csv
    # sudo rm data/triplesstats.csv
done

# python3 nt2ttl.py ${PWD}/data/triples # Transform resulting N3 files into Turtle

sudo chmod -R 777 .

# for val in ${Models[@]}; 
# do
#     # Use Web tool to obtain RDF-based CSV to create Image:
#     curl -X POST "http://178.63.49.197:5000/draw-io-utils/turtle-to-csv" -H "accept: text/csv" -H "Content-Type: multipart/form-data" -F "file=@${PWD}/data/triples/${val}.ttl;type=text/turtle" > ${PWD}/drawio/${val}.csv
# done